name: CI

on:
  push:

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      docker_tag: ${{ steps.docker_tag.outputs.tag }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - name: Set Docker tag
        id: docker_tag
        run: |
          if [[ "${{ github.ref_type }}" == "tag" ]]; then
            echo "tag=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          else
            echo "tag=${{ github.sha }}" >> $GITHUB_OUTPUT
          fi

  build:
    needs:
      - setup

    runs-on: ubuntu-latest

    strategy:
      matrix:
        image:
          - context: coldstarter
            tag: superemil64/coldstarter
            files: |
              coldstarter/**

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Get Changed Files
        id: changed-files
        uses: tj-actions/changed-files@v45
        if: ${{ github.event.before != '0000000000000000000000000000000000000000' }}
        with:
          base_sha: ${{ github.event.before }}
          files: ${{ matrix.image.files }}

      - name: Dump Changed Files
        if: ${{ github.event.before != '0000000000000000000000000000000000000000' }}
        env:
          FILES: ${{ toJson(steps.changed-files.outputs) }}
        run: echo "$FILES"

      - name: Copy Previous Image Tag
        id: copy-previous-image-tag
        if: ${{github.event.before != '0000000000000000000000000000000000000000' && steps.changed-files.outputs.any_changed != 'true' }}
        continue-on-error: true
        run: |
          docker pull ${{ matrix.image.tag }}:${{ github.event.before }}
          docker tag ${{ matrix.image.tag }}:${{ github.event.before }} ${{ matrix.image.tag }}:${{ needs.setup.outputs.docker_tag }}
          docker push ${{ matrix.image.tag }}:${{ needs.setup.outputs.docker_tag }}

      - name: Build Image
        uses: docker/build-push-action@v6
        if: ${{ steps.copy-previous-image-tag.outcome != 'success' }}
        with:
          push: true
          context: ${{ matrix.image.context }}
          platforms: linux/amd64
          tags: "${{ matrix.image.tag }}:${{ needs.setup.outputs.docker_tag }}"
          cache-from: type=registry,ref=${{ matrix.image.tag }}:buildcache
          cache-to: type=registry,ref=${{ matrix.image.tag }}:buildcache,mode=max
